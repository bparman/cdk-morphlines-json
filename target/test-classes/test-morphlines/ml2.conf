SOLR_LOCATOR : {
    # Name of solr collection
    collection : wf-rr
    # ZooKeeper ensemble
    zkHost : "zk33:2181,zk180:2181,zk234:2181/solr"
}

morphlines : [
{

    # Name used to identify a morphline. E.g. used if there are multiple morphlines in a
    # morphline config file
    id : morphline1
    importCommands : ["com.cloudera.**", "org.apache.solr.**"]
    commands : [

    { 
      readMultiLine {
  		regex : ".SystemSourceId.*"
 		what : next
  	   	charset : UTF-8
      }
    }

  {   logInfo { format : "input record: {}", args : ["@{}"] } }

    { setValues { _attachment_body = "@{message}" } }
    { toByteArray { field : _attachment_body } }        

    {
	split{
		inputField: message
		outputField: substrings
                separator: "\n"
	}
    }

    {
        findReplace{
              field: substrings
	      pattern : "(\\{+)(.*?)(\\}+)"
  	      isRegex : true
  	      replacement : "$2"
              replaceFirst : true

        }
    } 

    {
        findReplace{
		field: substrings
		pattern : "PrimaryAssetClass"
		isRegex : false
		replacement : "primary_asset_class"
		replaceFirst : true
	}
    }

    {
        findReplace{
                field: substrings
                pattern : "CounterpartyName"
                isRegex : false
                replacement : "counter_party_name"
                replaceFirst : true
        }
    }

    {
        findReplace{
                field: substrings
                pattern : "CounterpartyShortName"
                isRegex : false
                replacement : "counter_party_id"
                replaceFirst : true
        }
    }


    {
	splitKeyValue{
		inputField: substrings
                separator: "="
	}
    }


    { logInfo { format : "output record: {}", args : ["@{}"] } }

 	{
	addLocalHost {
 		 field : my_host
 		 useIP : false
	}

	}

        { addCurrentTime {} }


 {
      convertTimestamp {
            field : trade_date_time
            inputFormats : ["EEE, d MMM yyyy HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd", "MM/dd/yyyy HH:mm:ss 'Z'"]
            inputTimezone : America/Los_Angeles
            outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
            outputTimezone : UTC
        }
    }


# {
 #     convertTimestamp {
  #          field : trade_date
   #         inputFormats : ["EEE, d MMM yyyy HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd", "MM/dd/yyyy HH:mm:ss 'Z'"]
    #        inputTimezone : America/Los_Angeles
     #       outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
      #      outputTimezone : UTC
       # }
    #}


 {
      convertTimestamp {
            field : trade_settlement_date
            inputFormats : ["EEE, d MMM yyyy HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd", "MM/dd/yyyy HH:mm:ss 'Z'"]
            inputTimezone : America/Los_Angeles
            outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
            outputTimezone : UTC
        }
    }



# {
 #     convertTimestamp {
  #          field : legal_agreement_tdt
   #         inputFormats : ["EEE, d MMM yyyy HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd", "MM/dd/yyyy HH:mm:ss 'Z'"]
    #        inputTimezone : America/Los_Angeles
     #       outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
      #      outputTimezone : UTC
      #  }
   # }



 #{
  #    convertTimestamp {
   #         field : trade_execution_tdt
    #        inputFormats : ["EEE, d MMM yyyy HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd", "MM/dd/yyyy HH:mm:ss 'Z'"]
     #       inputTimezone : America/Los_Angeles
      #      outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
       #     outputTimezone : UTC
       # }
    #}

 #{
  #    convertTimestamp {
   #         field : timestamp
    #        inputFormats : ["EEE, d MMM yyyy HH:mm:ss Z", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "yyyy-MM-dd'T'HH:mm:ss", "yyyy-MM-dd", "MM/dd/yyyy HH:mm:ss 'Z'"]
     #       inputTimezone : America/Los_Angeles
      #      outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
       #     outputTimezone : UTC
       # }
   # }

     {
	setValues{
		id : "@{my_host}"."@{timestamp}"
	}
     }

   {
       setValues{
		message_type: "TXT"
	}
   }


    { logInfo { format : "output record: {}", args : ["@{}"] } }
 #   {
  #      generateUUID {
  #          field:id
   #     }
   # }

   # {
   #     sanitizeUnknownSolrFields {
   #         # Location from which to fetch Solr schema
   #         solrLocator : ${SOLR_LOCATOR}
   #     }
   # }

    # load the record into a SolrServer or MapReduce SolrOutputFormat.
    #{
    #    loadSolr {
    #        solrLocator : ${SOLR_LOCATOR}
    #    }
    #}
    
    ]
}
]

